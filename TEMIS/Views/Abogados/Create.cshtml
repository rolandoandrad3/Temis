@model TEMIS.Models.Abogados

@{
    ViewBag.Title = "Nuevo Abogado";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Nuevo Abogado</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Abogados</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        <div class="form-group">
            @Html.LabelFor(model => model.NombreAbogado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NombreAbogado, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NombreAbogado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApellidosAbogado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ApellidosAbogado, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ApellidosAbogado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DUIAbogado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DUIAbogado, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DUIAbogado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EspecialidadAbogado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EspecialidadAbogado, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EspecialidadAbogado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TelefonoAbogado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TelefonoAbogado, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TelefonoAbogado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmailAbogado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmailAbogado, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmailAbogado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CSJ, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CSJ, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CSJ, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
    </div>
}

<div class="text-center">
    <input type="submit" value="Create" class="btn btn-outline-primary" />
    <button class="btn btn-outline-secondary">@Html.ActionLink("Regresar al Listado", "Index")</button> 
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}