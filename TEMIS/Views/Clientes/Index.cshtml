@model PagedList.IPagedList<TEMIS.Models.Clientes>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" />
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">

@{
    ViewBag.Title = "Clientes";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Clientes</h2>

<p>
    <a href="@Url.Action("Create")" class="btn btn-primary">Agregar nuevo Cliente</a>
</p>

@using (Html.BeginForm())
{
    <p> Buscar por nombre, apellido o DUI: @Html.TextBox("cadenaBuscar", ViewBag.FiltroActual as string)</p>
    <input type="submit" value="Buscar" class="btn btn-outline-primary" />
}
<table class="table table-responsive-md">
    <tr>
        <th>
            Primer Nombre
        </th>
        <th>
            Segundo Nombre
        </th>
        <th>
            @Html.ActionLink("PrimAprellido", "Index", new { sortOrder = ViewBag.ApellidoSortParam, FiltroActual = ViewBag.FiltroActual })
        </th>
        <th>
            Segundo Apellido
        </th>
        <th>
            @Html.ActionLink("DUI", "Index", new { sortOrder = ViewBag.DUISortParam, FiltroActual = ViewBag.FiltroActual })
        </th>
        <th>
            Edad
        </th>
        <th>
            Nacionalidad
        </th>
        <th>
            Ocupacion
        </th>
        <th>
            Direccion
        </th>
        <th>
            Telefono
        </th>
        <th>
            Email
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.PrimNombre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SegNombre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PrimAprellido)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SegAprellido)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DUI)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Client_Edad)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Nacionalidad)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Ocupacion)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Direccion)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Telefonoo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                <a href="@Url.Action("Edit", new { id = item.ID_Cliente })" class="btn btn-info" title="Edit">
                    <i class="bi bi-pencil-fill"></i>
                </a>

                <a href="@Url.Action("Details", new { id = item.ID_Cliente })" class="btn btn-warning" title="Details">
                    <i class="bi bi-eye-fill"></i>
                </a>

                <a href="@Url.Action("Delete", new { id = item.ID_Cliente })" class="btn btn-danger" title="Delete">
                    <i class="bi bi-trash-fill"></i>
                </a>
            </td>

        </tr>
    }

</table>
<br />
Pagina @(Model.PageCount < Model.PageNumber ? 0: Model.PageNumber) de @Model.PageCount
<!--agregamos botones de indexamiento-->
@Html.PagedListPager(Model, pagina => Url.Action("Index", new { pagina, sortOrder = ViewBag.OrdenamientoActual, FiltroActual = ViewBag.FiltroActual }))
